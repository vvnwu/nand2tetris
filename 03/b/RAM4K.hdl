// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=d000, b=d001, c=d010, d=d011, e=d100, f=d101, g=d110, h=d111);

    RAM512(in=in, load=d000, address=address[0..8], out=r000);
    RAM512(in=in, load=d001, address=address[0..8], out=r001);
    RAM512(in=in, load=d010, address=address[0..8], out=r010);
    RAM512(in=in, load=d011, address=address[0..8], out=r011);
    RAM512(in=in, load=d100, address=address[0..8], out=r100);
    RAM512(in=in, load=d101, address=address[0..8], out=r101);
    RAM512(in=in, load=d110, address=address[0..8], out=r110);
    RAM512(in=in, load=d111, address=address[0..8], out=r111);

    Mux8Way16(a=r000, b=r001, c=r010, d=r011, e=r100, f=r101, g=r110, h=r111, sel=address[9..11], out=out);
}