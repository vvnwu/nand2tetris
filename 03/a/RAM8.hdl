// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=d0, b=d1, c=d2, d=d3, e=d4, f=d5, g=d6, h=d7);
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
    
    Register(in=in, load=d0, out=r0);
    Register(in=in, load=d1, out=r1);
    Register(in=in, load=d2, out=r2);
    Register(in=in, load=d3, out=r3);
    Register(in=in, load=d4, out=r4);
    Register(in=in, load=d5, out=r5);
    Register(in=in, load=d6, out=r6);
    Register(in=in, load=d7, out=r7);
}